---
title: "Manipuler des donn√©es spatiales avec `sf`"
echo: false
number-sections: true
---

::: {.badge}
<a href="https://datalab.sspcloud.fr/launcher/ide/rstudio?autoLaunch=true&init.personalInit=¬´https%3A%2F%2Fraw.githubusercontent.com%2Flinogaliana%2Fr-geographie%2Fmain%2Fsspcloud%2Finit.sh¬ª&networking.user.enabled=true&onyxia.friendlyName=¬´rstudio-cours-ENS¬ª" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/Tester%20via%20SSP%20cloud%20-%20SSPCloud?logo=R&labelColor=black&color=%231965b8" alt="Onyxia"></a><br>
:::

<details>
<summary>
D√©rouler les _slides_ ci-dessous ou [cliquer ici](/slides/wrangling.qmd)
pour afficher les slides en plein √©cran.
</summary>


``` {.yaml code-preview="/slides/wrangling.qmd"}
```

</details>


Dans ce trois√®me TP,
nous allons apprendre √† importer et
manipuler des donn√©es spatiales avec
{{< fa brands r-project >}}. Ce logiciel propose
des fonctionnalit√©s tr√®s int√©ressantes pour ce type de
donn√©es complexes qui le rendent capable de se comporter
comme un SIG.

Si vous √™tes int√©ress√©s par `Python` {{< fa brands python >}},
une version tr√®s proche de ce TP est disponible dans [mon cours de l'ENSAE](https://pythonds.linogaliana.fr/content/manipulation/03_geopandas_TP.html).


```{r}
#| eval: false
remotes::install_github("linogaliana/cartiflette-r")
library(cartiflette)
```

::: {.callout-note}

Certains exemples de code pr√©sentent des annotations sur le c√¥t√©,
passez votre souris dessus pour les afficher, comme ci-dessous

```{r}
#| echo: true
#| output: false
"une annotation explicative m'accompagne √† droite" #<1>
```
1. Je m'affiche quand on passe la souris sur moi üê≠ !

:::


## Lire et enrichir des donn√©es spatiales

Dans cette partie,
nous utiliserons
les fonds de carte de l'IGN dont
la mise √† disposition est facilit√©e
par le projet [`cartiflette`](https://github.com/InseeFrLab/cartiflette.git)[^cartiflette-r].

[^cartiflette-r]:
  La librairie {{< fa brands r-project >}} n'est pas encore pr√™te √† l'emploi mais 
  les prochaines semaines devraient permettre de combler ce manque. 
  Une documentation interactive illustrant le code n√©cessaire pour reproduire
  telle ou telle carte est disponible sur [linogaliana.github.io/cartiflette-website](https://linogaliana.github.io/cartiflette-website/index.html).


::: {.callout-tip}
## Exercice 1: lire et explorer la structure de fichiers g√©ographiques

```{r}
#1) Chargement des donn√©es de Cartiflette
communes_borders <- download_vectorfile_url_all(
    crs = 4326,
    values = c("75", "92", "93", "94"),
    borders="COMMUNE",
    vectorfile_format="geojson",
    filter_by="DEPARTEMENT",
    source="EXPRESS-COG-CARTO-TERRITOIRE",
    year=2022)
```

```{r}
# 2) Regarder les premi√®res lignes
head(communes_borders)
```

```{r}
# 3) Afficher le crs
sf::st_crs(communes_borders)
# Les donn√©es sont en WGS84, on les reprojette en lambert 93
```

```{r}
library(dplyr)
# 4) afficher les communes du d√©partement 92
plot
communes_borders %>% filter('INSEE_DEP' == "92")
```

Quant √† Paris, √† l'issue de la question 5, la carte
aura l'aspect suivant:


```{r}
# 5) Repr√©senter la carte de Paris. Quel est le probl√®me ?
ggplot(communes_borders %>% filter('INSEE_DEP'] == "75")) +
    geom_sf(fill = "white")
```

:::


En effet, on ne dispose ainsi pas des limites des arrondissements parisiens, ce
qui appauvrit grandement la carte de Paris. 
On pourrait les r√©cup√©rer directement 
depuis le site d'_open-data_ du Grand Paris, ce qui est propos√©
en [exercice suppl√©mentaire üëáÔ∏è](#exo-supp).
On propose ici d'utiliser √† nouveau
`cartiflette` pour cela afin de disposer du fonds de carte officiel. 
