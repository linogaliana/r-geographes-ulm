---
title: "Importer et manipuler des donn√©es avec {{< fa brands r-project >}}"
echo: false
number-sections: true
---

::: {.badge}
<a href="https://datalab.sspcloud.fr/launcher/ide/rstudio?autoLaunch=true&init.personalInit=¬´https%3A%2F%2Fraw.githubusercontent.com%2Flinogaliana%2Fr-geographie%2Fmain%2Fsspcloud%2Finit.sh¬ª&networking.user.enabled=true&onyxia.friendlyName=¬´rstudio-cours-ENS¬ª" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/Tester%20via%20SSP%20cloud%20-%20SSPCloud?logo=R&labelColor=black&color=%231965b8" alt="Onyxia"></a><br>
:::

Dans ce deuxi√®me TP,
nous allons apprendre √† importer et
manipuler des donn√©es avec
{{< fa brands r-project >}}. 

Si vous √™tes int√©ress√©s par `Python` {{< fa brands python >}},
une version tr√®s proche de ce TP est disponible dans [mon cours de l'ENSAE](https://pythonds.linogaliana.fr/content/manipulation/02b_pandas_TP.html).


::: {.callout-note}

Certains exemples de code pr√©sentent des annotations sur le c√¥t√©,
passez votre souris dessus pour les afficher, comme ci-dessous

```{r}
#| echo: true
#| output: false
"une annotation explicative m'accompagne √† droite" #<1>
```
1. Je m'affiche quand on passe la souris sur moi üê≠ !

:::

Dans ce chapitre, nous allons principalement utiliser les packages suivants
du `tidyverse`: 

- `readr` pour l'import de donn√©es ;
- `dplyr` pour la manipulation de donn√©es.

::: {.callout-note}

Le `tidyverse` n'est pas le seul √©cosyst√®me complet pour analyser des donn√©es.

N√©anmoins, pour une introduction √† {{< fa brands r-project >}}, c'est 
certainement le plus raisonnable √† adopter. 

Les √©cosyst√®mes
concurrents ou compl√©mentaires (`data.table`, `arrow`, `duckdb`) n√©cessitent
d√©j√† une bonne compr√©hension du `tidyverse` et de ses limites. 

:::

Dans ce tutoriel, nous allons utiliser deux sources de donn√©es :

* Les √©missions de gaz √† effet de serre estim√©es au niveau communal par l'`ADEME`. Le jeu de donn√©es est 
disponible sur [data.gouv](https://www.data.gouv.fr/fr/datasets/inventaire-de-gaz-a-effet-de-serre-territorialise/#_)
et requ√™table directement dans {{< fa brands r-project >}} avec
[cet url](https://koumoul.com/s/data-fair/api/v1/datasets/igt-pouvoir-de-rechauffement-global/convert) (ce sera l'objet du premier exercice)[^notedownload].
* Id√©alement, on utiliserait directement les donn√©es
[disponibles sur le site de l'Insee](https://www.insee.fr/fr/statistiques/3560121) mais celles-ci n√©cessitent un peu de travail
de nettoyage qui n'entre pas dans le cadre de ce TP. 
Pour faciliter l'import de donn√©es Insee, il est recommand√© d'utiliser les _packages_
[`doremifasol`](https://github.com/InseeFrLab/DoReMIFaSol) et [`insee`](https://github.com/pyr-opendatafr/R-Insee-Data) qui simplifient l'acc√®s aux donn√©es
de l'Insee disponibles sur le site web [insee.fr](https://www.insee.fr/fr/accueil)
ou via des API. 

[^notedownload]: 

  `readr` offre la possibilit√© d'importer des donn√©es directement depuis un url. C'est l'option 
  prise dans ce tutoriel. Si vous pr√©f√®rez, pour des 
  raisons d'acc√®s au r√©seau ou de performance, importer depuis un poste local,
  vous pouvez t√©l√©charger les donn√©es et changer
  les commandes d'import avec le chemin ad√©quat plut√¥t que l'url. 


## Etapes pr√©liminaires: installer les _packages_

{{< fa brands r-project >}} est un langage _open source_. N'importe qui peut
donc proposer du code {{< fa brands r-project >}} pour accro√Ætre les 
fonctionnalit√©s du langage. Un ensemble coh√©rent de fonctionnalit√©s s'appelle
une __librairie__ ou un __package__. 

Comme l'√©quipe qui g√®re le langage {{< fa brands r-project >}} n'a pas vocation
√† int√©grer toutes les librairies dans le langage de base (celui-ci se doit
de rester, comme son nom l'indique, basique), il existe des espaces
communautaires o√π les gens peuvent mettre √† disposition leurs _packages_. Dans
l'√©cosyst√®me {{< fa brands r-project >}}, les deux principaux[^bioconductor] sont:

- Le `CRAN` (_Comprehensive R Archive Network_): le d√©p√¥t officiel et historique
de librairies {{< fa brands r-project >}}.
Pour installer un _package_ stock√© dans cet espace, on utilise `install.package` ;
- `Github` {{< fa brands github >}}: le r√©seau social du code _open source_. 
Pour installer un _package_ stock√© dans cet espace, on utilise `remotes::install_github`[^remotes]

[^bioconductor]: Il existe √©galement `bioconductor` mais celui-ci √©tant surtout orient√© biostatistiques (une des communaut√©s acad√©miques ayant adopt√© {{< fa brands r-project >}} le plus t√¥t), nous ne l'utilisons pas vraiment

[^remotes]:
    `remotes::install_github` signifie d'utiliser la fonction `install_github` du _package_ `remotes`. Autrement dit, il faut un _package_ pour installer d'autres _packages_ ü§Ø.
    C'est parce que `Github` n'existait pas lors de la cr√©ation de {{< fa brands r-project >}} (ann√©es 1990) et que cette fonctionnalit√© n'a pas √©t√© ajout√© depuis. 

::: {.callout-note}

En g√©n√©ral, les _packages_ avec une certaine
maturit√© sont sur le CRAN. `Github` a un aspect plus fourre-tout o√π on trouve
des mines d'or √† c√¥t√© de choses de qualit√© plus variable. 

Certains _packages_ que nous verrons ne sont pas sur le CRAN car la proc√©dure
de validation pour pouvoir y d√©poser son _package_ est assez lourde et
fatiguante pour des d√©veloppeurs b√©n√©voles, g√©n√©ralement non r√©mun√©r√© 
pour ce travail et qui effectuent souvent cela la nuit. 

:::

Nous allons supposer que les principales librairies du `tidyverse` sont
d√©j√† install√©es. Sinon, vous pouvez les installer en suivant la documentation
en ligne. 

Pour installer un package disponible sur le CRAN, par exemple
le package [`insee`](https://cran.r-project.org/web/packages/insee/index.html),
vous pouvez faire:

```{r}
#| eval: false
install.packages("insee")
```

Pour installer un package disponible sur `Github` {{< fa brands github >}},
par exemple [`doremifasol`](https://github.com/InseeFrLab/DoReMIFaSol)
qui est disponible sur le d√©p√¥t du compte `InseeFrLab`, on fait:


```{r}
#| eval: false
remotes::install_github('inseefrlab/DoReMIFaSol')
```

# Importer les donn√©es

Pour commencer, nous allons importer les donn√©es de l'Ademe √† l'aide du package `readr`[^readcsv]. 


[^readcsv]: Il existe des fonctions pour importer des donn√©es depuis un csv dans le langage de base.
Cependant, elles ne sont pas recommand√©es. 


```{r}
#| echo: true

#df = pd.read_csv("https://koumoul.com/s/data-fair/api/v1/datasets/igt-pouvoir-de-rechauffement-global/convert", sep=",")
```

